{"version":3,"sources":["webpack:///D:/Code/yd/pages/ai-doctor/index.vue?9371","webpack:///D:/Code/yd/pages/ai-doctor/index.vue?4e55","uni-app:///main.js","webpack:///D:/Code/yd/pages/ai-doctor/index.vue?55b9","webpack:///D:/Code/yd/pages/ai-doctor/index.vue?de4e","webpack:///D:/Code/yd/pages/ai-doctor/index.vue?a479","webpack:///D:/Code/yd/pages/ai-doctor/index.vue?c947","uni-app:///pages/ai-doctor/index.vue"],"names":["wx","__webpack_require_UNI_MP_PLUGIN__","__webpack_require__","createPage","Page","data","statusBarHeight","messageList","type","content","time","inputMessage","isLoading","scrollTop","aiService","streamingMessage","isStreaming","onLoad","console","methods","sendMessage","userMessage","callAIModelWithStreaming","messages","filter","map","role","onStreamChunk","response","callAIModel","getCurrentTime","scrollToBottom","goBack","uni","delta","fail","url"],"mappings":"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","file":"pages/ai-doctor/index.js","sourcesContent":["import mod from \"-!../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/stylePostLoader.js!../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--6-oneOf-1-2!../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-3!../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./index.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/stylePostLoader.js!../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--6-oneOf-1-2!../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-3!../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./index.vue?vue&type=style&index=0&lang=css&\"","// extracted by mini-css-extract-plugin\n    if(module.hot) {\n      // 1757236588341\n      var cssReload = require(\"D:/Program Files/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"hmr\":true,\"publicPath\":\"/\",\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  ","import 'uni-pages';\n// @ts-ignore\nwx.__webpack_require_UNI_MP_PLUGIN__ = __webpack_require__;import '@dcloudio/vue-cli-plugin-uni/packages/uni-cloud/dist/index.js';\nimport Vue from 'vue'\nimport Page from './pages/ai-doctor/index.vue'\ncreatePage(Page)","import { render, staticRenderFns, recyclableRender, components } from \"./index.vue?vue&type=template&id=4798227e&\"\nvar renderjs\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"pages/ai-doctor/index.vue\"\nexport default component.exports","export * from \"-!../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--17-0!../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./index.vue?vue&type=template&id=4798227e&\"","var components\nvar render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  var m0 = _vm.isStreaming ? _vm.getCurrentTime() : null\n  var g0 = _vm.inputMessage.length\n  var g1 = !_vm.inputMessage.trim() || _vm.isLoading\n  _vm.$mp.data = Object.assign(\n    {},\n    {\n      $root: {\n        m0: m0,\n        g0: g0,\n        g1: g1,\n      },\n    }\n  )\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--13-1!../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--13-1!../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../Program Files/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./index.vue?vue&type=script&lang=js&\"","<template>\n  <view class=\"container\">\n    <!-- 顶部标题 -->\n    <view class=\"header\">\n      <view class=\"status-bar\"></view>\n      <view class=\"nav-bar\">\n        <view class=\"back-btn\" @click=\"goBack\">\n          <text class=\"iconfont icon-back\">←</text>\n        </view>\n        <text class=\"header-title\">AI智能问诊</text>\n        <view class=\"placeholder\"></view>\n      </view>\n    </view>\n    \n    <!-- 原生聊天界面 -->\n    <view class=\"chat-container\">\n      <!-- 聊天消息列表 -->\n      <scroll-view\n        class=\"message-list\"\n        scroll-y\n        :scroll-top=\"scrollTop\"\n        scroll-with-animation\n      >\n        <view class=\"message-item\" v-for=\"(message, index) in messageList\" :key=\"index\">\n          <!-- 用户消息 -->\n          <view class=\"message user-message\" v-if=\"message.type === 'user'\">\n            <view class=\"message-content user-content\">\n              <text>{{ message.content }}</text>\n            </view>\n            <view class=\"message-avatar user-avatar\">\n              <image src=\"/static/images/user-avatar.png\" mode=\"aspectFill\"></image>\n            </view>\n          </view>\n\n          <!-- AI消息 -->\n          <view class=\"message ai-message\" v-else>\n            <view class=\"message-avatar ai-avatar\">\n              <image src=\"/static/images/ai-avatar.png\" mode=\"aspectFill\"></image>\n            </view>\n            <view class=\"message-content ai-content\">\n              <text>{{ message.content }}</text>\n              <view class=\"message-time\">{{ message.time }}</view>\n            </view>\n          </view>\n        </view>\n\n        <!-- 流式响应状态 -->\n        <view class=\"message-item\" v-if=\"isStreaming\">\n          <view class=\"message ai-message\">\n            <view class=\"message-avatar ai-avatar\">\n              <image src=\"/static/images/ai-avatar.png\" mode=\"aspectFill\"></image>\n            </view>\n            <view class=\"message-content ai-content\">\n              <text>{{ streamingMessage }}</text>\n              <view class=\"message-time\">{{ getCurrentTime() }}</view>\n            </view>\n          </view>\n        </view>\n\n        <!-- 加载状态 -->\n        <view class=\"loading-message\" v-if=\"isLoading && !isStreaming\">\n          <view class=\"message-avatar ai-avatar\">\n            <image src=\"/static/images/ai-avatar.png\" mode=\"aspectFill\"></image>\n          </view>\n          <view class=\"loading-dots\">\n            <view class=\"dot\"></view>\n            <view class=\"dot\"></view>\n            <view class=\"dot\"></view>\n          </view>\n        </view>\n      </scroll-view>\n\n      <!-- 输入区域 -->\n      <view class=\"input-area\">\n        <view class=\"input-wrapper\">\n          <textarea\n            class=\"message-input\"\n            v-model=\"inputMessage\"\n            placeholder=\"请描述您的症状...\"\n            :maxlength=\"500\"\n            auto-height\n            @confirm=\"sendMessage\"\n          ></textarea>\n          <view class=\"input-actions\">\n            <text class=\"char-count\">{{ inputMessage.length }}/500</text>\n            <view\n              class=\"send-btn\"\n              :class=\"{ disabled: !inputMessage.trim() || isLoading }\"\n              @click=\"sendMessage\"\n            >\n              <text>发送</text>\n            </view>\n          </view>\n        </view>\n      </view>\n    </view>\n  </view>\n</template>\n\n<script>\nimport AliyunBailianService from '../../utils/ai-service.js';\nimport { getCurrentConfig } from '../../config/ai-config.js';\n\nexport default {\n  data() {\n    return {\n      statusBarHeight: 20,\n      messageList: [\n        {\n          type: 'ai',\n          content: '您好！我是您的AI医疗助手，请描述您的症状，我会为您提供专业的医疗建议。',\n          time: this.getCurrentTime()\n        }\n      ],\n      inputMessage: '',\n      isLoading: false,\n      scrollTop: 0,\n      aiService: null,\n      streamingMessage: '',\n      isStreaming: false\n    };\n  },\n  onLoad() {\n    // 获取状态栏高度\n    const systemInfo = uni.getSystemInfoSync();\n    this.statusBarHeight = systemInfo.statusBarHeight || 20;\n\n    // 初始化AI服务\n    try {\n      const config = getCurrentConfig();\n      this.aiService = new AliyunBailianService(config);\n      console.log('AI服务初始化成功');\n    } catch (error) {\n      console.error('AI服务初始化失败:', error);\n    }\n\n    // 初始化聊天\n    this.scrollToBottom();\n  },\n  methods: {\n    // 发送消息\n    async sendMessage() {\n      if (!this.inputMessage.trim() || this.isLoading) return;\n\n      const userMessage = this.inputMessage.trim();\n      this.inputMessage = '';\n\n      // 添加用户消息\n      this.messageList.push({\n        type: 'user',\n        content: userMessage,\n        time: this.getCurrentTime()\n      });\n\n      this.scrollToBottom();\n      this.isLoading = true;\n\n      try {\n        // 调用AI模型API（支持流式响应）\n        await this.callAIModelWithStreaming(userMessage);\n\n      } catch (error) {\n        console.error('AI调用失败:', error);\n        this.messageList.push({\n          type: 'ai',\n          content: '抱歉，我暂时无法回答您的问题，请稍后再试。',\n          time: this.getCurrentTime()\n        });\n      } finally {\n        this.isLoading = false;\n        this.scrollToBottom();\n      }\n    },\n\n    // 调用大模型API（支持流式响应）\n    async callAIModelWithStreaming(message) {\n      if (!this.aiService) {\n        throw new Error('AI服务未初始化');\n      }\n\n      try {\n        // 构建消息历史\n        const messages = this.messageList\n          .filter(msg => msg.type !== 'system')\n          .map(msg => ({\n            role: msg.type === 'user' ? 'user' : 'assistant',\n            content: msg.content\n          }));\n\n        // 添加当前用户消息\n        messages.push({\n          role: 'user',\n          content: message\n        });\n\n        // 初始化流式响应状态\n        this.streamingMessage = '';\n        this.isStreaming = true;\n\n        // 定义流式响应回调函数\n        const onStreamChunk = (chunk, isComplete) => {\n          this.streamingMessage = chunk;\n          \n          // 如果是完整的响应，添加到消息列表\n          if (isComplete) {\n            this.messageList.push({\n              type: 'ai',\n              content: chunk,\n              time: this.getCurrentTime()\n            });\n            this.isStreaming = false;\n            this.streamingMessage = '';\n          }\n          \n          // 自动滚动到底部\n          this.scrollToBottom();\n        };\n\n        // 调用AI服务（启用流式响应）\n        const response = await this.aiService.sendDiagnosisRequest(\n          messages, \n          null, \n          {}, \n          onStreamChunk\n        );\n        \n        // 如果流式响应没有完成，确保添加到消息列表\n        if (this.isStreaming && this.streamingMessage) {\n          this.messageList.push({\n            type: 'ai',\n            content: this.streamingMessage,\n            time: this.getCurrentTime()\n          });\n          this.isStreaming = false;\n          this.streamingMessage = '';\n        }\n        \n        // 返回完整的AI回复\n        if (response && response.output && response.output.text) {\n          return response.output.text;\n        } else if (this.streamingMessage) {\n          // 如果流式消息有内容，返回流式消息\n          return this.streamingMessage;\n        } else {\n          throw new Error('AI回复内容为空');\n        }\n      } catch (error) {\n        console.error('AI调用失败:', error);\n        this.isStreaming = false;\n        this.streamingMessage = '';\n        throw error;\n      }\n    },\n\n    // 调用大模型API（原始方法，保留作为备选）\n    async callAIModel(message) {\n      if (!this.aiService) {\n        throw new Error('AI服务未初始化');\n      }\n\n      try {\n        // 构建消息历史\n        const messages = this.messageList\n          .filter(msg => msg.type !== 'system')\n          .map(msg => ({\n            role: msg.type === 'user' ? 'user' : 'assistant',\n            content: msg.content\n          }));\n\n        // 添加当前用户消息\n        messages.push({\n          role: 'user',\n          content: message\n        });\n\n        // 调用AI服务\n        const response = await this.aiService.sendDiagnosisRequest(messages);\n        \n        // 返回AI回复\n        if (response && response.output && response.output.text) {\n          return response.output.text;\n        } else {\n          throw new Error('AI回复内容为空');\n        }\n      } catch (error) {\n        console.error('AI调用失败:', error);\n        throw error;\n      }\n    },\n\n    // 获取当前时间\n    getCurrentTime() {\n      const now = new Date();\n      return `${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}`;\n    },\n\n    // 滚动到底部\n    scrollToBottom() {\n      this.$nextTick(() => {\n        this.scrollTop = 999999;\n      });\n    },\n\n    goBack() {\n      uni.navigateBack({\n        delta: 1,\n        fail: () => {\n          uni.switchTab({\n            url: '/pages/index/index'\n          });\n        }\n      });\n    }\n  }\n}\n</script>\n\n<style>\n.container {\n  background-color: #f5f7fa;\n  min-height: 100vh;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n}\n\n/* 顶部标题 */\n.header {\n  background: linear-gradient(to right, #3a7bd5, #00d2ff);\n  flex-shrink: 0;\n  position: relative;\n  z-index: 100;\n}\n\n.status-bar {\n  height: 44rpx;\n  width: 100%;\n}\n\n.nav-bar {\n  height: 90rpx;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 30rpx;\n  position: relative;\n}\n\n.back-btn {\n  width: 60rpx;\n  height: 60rpx;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.back-btn text {\n  color: #fff;\n  font-size: 36rpx;\n}\n\n.header-title {\n  font-size: 36rpx;\n  font-weight: 500;\n  color: #fff;\n  flex: 1;\n  text-align: center;\n}\n\n.placeholder {\n  width: 60rpx;\n}\n\n/* 聊天容器 */\n.chat-container {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  height: calc(100vh - 134rpx);\n  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\n}\n\n/* 消息列表 */\n.message-list {\n  flex: 1;\n  padding: 20rpx;\n  overflow-y: auto;\n}\n\n.message-item {\n  margin-bottom: 30rpx;\n}\n\n.message {\n  display: flex;\n  align-items: flex-end;\n  max-width: 80%;\n}\n\n/* 用户消息 */\n.user-message {\n  justify-content: flex-end;\n  margin-left: auto;\n}\n\n.user-content {\n  background: linear-gradient(135deg, #667eea, #764ba2);\n  color: #fff;\n  margin-right: 20rpx;\n  order: 1;\n}\n\n.user-avatar {\n  order: 2;\n}\n\n/* AI消息 */\n.ai-message {\n  justify-content: flex-start;\n}\n\n.ai-content {\n  background: #fff;\n  color: #333;\n  margin-left: 20rpx;\n  box-shadow: 0 4rpx 12rpx rgba(0, 0, 0, 0.1);\n}\n\n.message-content {\n  padding: 24rpx 30rpx;\n  border-radius: 24rpx;\n  font-size: 28rpx;\n  line-height: 1.5;\n  word-wrap: break-word;\n  position: relative;\n}\n\n.message-avatar {\n  width: 80rpx;\n  height: 80rpx;\n  border-radius: 50%;\n  overflow: hidden;\n  flex-shrink: 0;\n}\n\n.message-avatar image {\n  width: 100%;\n  height: 100%;\n}\n\n.message-time {\n  font-size: 22rpx;\n  color: #999;\n  margin-top: 8rpx;\n  text-align: right;\n}\n\n/* 加载动画 */\n.loading-message {\n  display: flex;\n  align-items: center;\n  margin-bottom: 30rpx;\n}\n\n.loading-dots {\n  display: flex;\n  align-items: center;\n  padding: 24rpx 30rpx;\n  background: #fff;\n  border-radius: 24rpx;\n  margin-left: 20rpx;\n  box-shadow: 0 4rpx 12rpx rgba(0, 0, 0, 0.1);\n}\n\n.dot {\n  width: 12rpx;\n  height: 12rpx;\n  border-radius: 50%;\n  background: #667eea;\n  margin: 0 6rpx;\n  animation: loadingDot 1.4s ease-in-out infinite both;\n}\n\n.dot:nth-child(1) { animation-delay: -0.32s; }\n.dot:nth-child(2) { animation-delay: -0.16s; }\n\n@keyframes loadingDot {\n  0%, 80%, 100% {\n    transform: scale(0.8);\n    opacity: 0.5;\n  }\n  40% {\n    transform: scale(1);\n    opacity: 1;\n  }\n}\n\n/* 输入区域 */\n.input-area {\n  background: #fff;\n  padding: 20rpx;\n  border-top: 1rpx solid #f0f0f0;\n  box-shadow: 0 -4rpx 12rpx rgba(0, 0, 0, 0.05);\n}\n\n.input-wrapper {\n  background: #f8f9fa;\n  border-radius: 24rpx;\n  padding: 20rpx;\n  border: 2rpx solid #e9ecef;\n  transition: border-color 0.3s ease;\n}\n\n.input-wrapper:focus-within {\n  border-color: #667eea;\n}\n\n.message-input {\n  width: 100%;\n  min-height: 80rpx;\n  max-height: 200rpx;\n  font-size: 28rpx;\n  line-height: 1.5;\n  background: transparent;\n  border: none;\n  outline: none;\n  resize: none;\n  color: #333;\n}\n\n.message-input::placeholder {\n  color: #999;\n}\n\n.input-actions {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 16rpx;\n}\n\n.char-count {\n  font-size: 24rpx;\n  color: #999;\n}\n\n.send-btn {\n  background: linear-gradient(135deg, #667eea, #764ba2);\n  color: #fff;\n  padding: 16rpx 32rpx;\n  border-radius: 20rpx;\n  font-size: 26rpx;\n  font-weight: 500;\n  transition: all 0.3s ease;\n  box-shadow: 0 4rpx 12rpx rgba(102, 126, 234, 0.3);\n}\n\n.send-btn:active {\n  transform: scale(0.95);\n}\n\n.send-btn.disabled {\n  background: #ccc;\n  box-shadow: none;\n  opacity: 0.6;\n}\n\n/* 响应式设计 */\n@media screen and (max-width: 750rpx) {\n  .message {\n    max-width: 90%;\n  }\n\n  .message-content {\n    padding: 20rpx 24rpx;\n    font-size: 26rpx;\n  }\n\n  .message-avatar {\n    width: 70rpx;\n    height: 70rpx;\n  }\n}\n</style> "],"sourceRoot":""}